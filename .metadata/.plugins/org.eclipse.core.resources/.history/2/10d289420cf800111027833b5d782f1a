import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Brackets {

	static void solve() throws Exception {
			}

	static void c(String s) {
		System.out.println(s.indexOf("WUB", s.indexOf("WUB") + 1));
	}

	public static void main(String[] args) throws Exception {
		solve();
	}

	private static class Parser {
		BufferedReader br;
		StringTokenizer st;

		public Parser() throws Exception {
			// buf = new BufferedReader(new InputStreamReader(new
			// FileInputStream("in.txt")));
			br = new BufferedReader(new InputStreamReader(System.in));
			st = new StringTokenizer("");
		}

		String nextString() throws Exception {
			while (!st.hasMoreTokens()) {
				String s = br.readLine();
				if (s != null)
					st = new StringTokenizer(s);
				else
					return null;
			}
			return st.nextToken();
		}

		String nextLine() throws Exception {
			st = new StringTokenizer("");
			return br.readLine();
		}

		Integer nextInteger() throws Exception {
			return nextInteger(10);
		}

		Integer nextInteger(int radix) throws Exception {
			String s = nextString();
			return (s != null) ? Integer.parseInt(s, radix) : null;
		}

		Long nextLong() throws Exception {
			return nextLong(10);
		}

		Long nextLong(int radix) throws Exception {
			String s = nextString();
			return (s != null) ? Long.parseLong(s, radix) : null;
		}

		Double nextDouble() throws Exception {
			String s = nextString();
			return (s != null) ? Double.parseDouble(s) : null;
		}
	}
}