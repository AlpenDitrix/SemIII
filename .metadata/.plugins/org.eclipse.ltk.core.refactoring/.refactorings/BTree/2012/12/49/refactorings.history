<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Extract method &apos;private void checkMinimalSize(Node node)&apos; from &apos;bTree.BTree.Node.remove()&apos; to &apos;bTree.BTree.Node&apos;&#x0D;&#x0A;- Original project: &apos;BTree&apos;&#x0D;&#x0A;- Method name: &apos;checkMinimalSize&apos;&#x0D;&#x0A;- Destination type: &apos;bTree.BTree.Node&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;checkMinimalSize&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;bTree{BTree.java" name="checkMinimalSize" replace="false" selection="9128 846" stamp="1354403943496" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Copy element &apos;&apos; to &apos;bTree.BTree.Node.checkMinimalSizeAndProcess()&apos;&#x0D;&#x0A;- Original project: &apos;BTree&apos;&#x0D;&#x0A;- Destination element: &apos;bTree.BTree.Node.checkMinimalSizeAndProcess()&apos;&#x0D;&#x0A;- Original element: &apos;bTree.BTree.Node.checkMinimalSizeAndProcess()&apos;" description="Copy method" destination="/src&lt;bTree{BTree.java[BTree[Node~checkMinimalSizeAndProcess" element1="/src&lt;bTree{BTree.java[BTree[Node~checkMinimalSizeAndProcess" flags="589830" id="org.eclipse.jdt.ui.copy" members="1" policy="org.eclipse.jdt.ui.copyMembers" stamp="1354471819177" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;BTree&apos;&#x0D;&#x0A;- Original project: &apos;BTree&apos;&#x0D;&#x0A;- Original element: &apos;bTree.BTree.Node.heightChanging&apos;" description="Delete element" element1="/src&lt;bTree{BTree.java[BTree[Node^heightChanging" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1354471835231" subPackages="false" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private void removeFromLeaf(int i)&apos; from &apos;bTree.BTree.Node.remove()&apos; to &apos;bTree.BTree.Node&apos;&#x0D;&#x0A;- Original project: &apos;BTree&apos;&#x0D;&#x0A;- Method name: &apos;removeFromLeaf&apos;&#x0D;&#x0A;- Destination type: &apos;bTree.BTree.Node&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;removeFromLeaf&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;bTree{BTree.java" name="removeFromLeaf" replace="false" selection="8032 289" stamp="1354471917681" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private void removeFromNode(int i)&apos; from &apos;bTree.BTree.Node.remove()&apos; to &apos;bTree.BTree.Node&apos;&#x0D;&#x0A;- Original project: &apos;BTree&apos;&#x0D;&#x0A;- Method name: &apos;removeFromNode&apos;&#x0D;&#x0A;- Destination type: &apos;bTree.BTree.Node&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;removeFromNode&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;bTree{BTree.java" name="removeFromNode" replace="false" selection="8072 145" stamp="1354471936176" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Rename local variable &apos;key1&apos; in &apos;bTree.BTree.Node.split()&apos; to &apos;keyLeft&apos;&#x0D;&#x0A;- Original project: &apos;BTree&apos;&#x0D;&#x0A;- Original element: &apos;bTree.BTree.Node.split().key1&apos;&#x0D;&#x0A;- Renamed element: &apos;key1&apos;&#x0D;&#x0A;- Update references to refactored element" description="Rename local variable &apos;key1&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;bTree{BTree.java[BTree[Node~split@key1!1590!1619!1599!1602!\[QObject;!0!false" name="keyLeft" references="true" stamp="1354472222796" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;key2&apos; in &apos;bTree.BTree.Node.split()&apos; to &apos;keyRight&apos;&#x0D;&#x0A;- Original project: &apos;BTree&apos;&#x0D;&#x0A;- Original element: &apos;bTree.BTree.Node.split().key2&apos;&#x0D;&#x0A;- Renamed element: &apos;key2&apos;&#x0D;&#x0A;- Update references to refactored element" description="Rename local variable &apos;key2&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;bTree{BTree.java[BTree[Node~split@key2!1628!1657!1637!1640!\[QObject;!0!false" name="keyRight" references="true" stamp="1354472230020" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;keyRight&apos; in &apos;bTree.BTree.Node.split()&apos; to &apos;keysRight&apos;&#x0D;&#x0A;- Original project: &apos;BTree&apos;&#x0D;&#x0A;- Original element: &apos;bTree.BTree.Node.split().keyRight&apos;&#x0D;&#x0A;- Renamed element: &apos;keyRight&apos;&#x0D;&#x0A;- Update references to refactored element" description="Rename local variable &apos;keyRight&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;bTree{BTree.java[BTree[Node~split@keyRight!1628!1661!1637!1644!\[QObject;!0!false" name="keysRight" references="true" stamp="1354472234194" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;keyLeft&apos; in &apos;bTree.BTree.Node.split()&apos; to &apos;keysLeft&apos;&#x0D;&#x0A;- Original project: &apos;BTree&apos;&#x0D;&#x0A;- Original element: &apos;bTree.BTree.Node.split().keyLeft&apos;&#x0D;&#x0A;- Renamed element: &apos;keyLeft&apos;&#x0D;&#x0A;- Update references to refactored element" description="Rename local variable &apos;keyLeft&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;bTree{BTree.java[BTree[Node~split@keyLeft!1590!1622!1599!1605!\[QObject;!0!false" name="keysLeft" references="true" stamp="1354472237342" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;value1&apos; in &apos;bTree.BTree.Node.split()&apos; to &apos;valuesLeft&apos;&#x0D;&#x0A;- Original project: &apos;BTree&apos;&#x0D;&#x0A;- Original element: &apos;bTree.BTree.Node.split().value1&apos;&#x0D;&#x0A;- Renamed element: &apos;value1&apos;&#x0D;&#x0A;- Update references to refactored element" description="Rename local variable &apos;value1&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;bTree{BTree.java[BTree[Node~split@value1!1669!1700!1678!1683!\[QObject;!0!false" name="valuesLeft" references="true" stamp="1354472242520" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;value&apos; in &apos;bTree.BTree.Node.split()&apos; to &apos;valuesRight&apos;&#x0D;&#x0A;- Original project: &apos;BTree&apos;&#x0D;&#x0A;- Original element: &apos;bTree.BTree.Node.split().value&apos;&#x0D;&#x0A;- Renamed element: &apos;value&apos;&#x0D;&#x0A;- Update references to refactored element" description="Rename local variable &apos;value&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;bTree{BTree.java[BTree[Node~split@value!1710!1740!1719!1723!\[QObject;!0!false" name="valuesRight" references="true" stamp="1354472249397" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;link1&apos; in &apos;bTree.BTree.Node.split()&apos; to &apos;linksLeft&apos;&#x0D;&#x0A;- Original project: &apos;BTree&apos;&#x0D;&#x0A;- Original element: &apos;bTree.BTree.Node.split().link1&apos;&#x0D;&#x0A;- Renamed element: &apos;link1&apos;&#x0D;&#x0A;- Update references to refactored element" description="Rename local variable &apos;link1&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;bTree{BTree.java[BTree[Node~split@link1!1752!1800!1759!1763!\[QNode;!0!false" name="linksLeft" references="true" stamp="1354472262538" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;link2&apos; in &apos;bTree.BTree.Node.split()&apos; to &apos;linksRight&apos;&#x0D;&#x0A;- Original project: &apos;BTree&apos;&#x0D;&#x0A;- Original element: &apos;bTree.BTree.Node.split().link2&apos;&#x0D;&#x0A;- Renamed element: &apos;link2&apos;&#x0D;&#x0A;- Update references to refactored element" description="Rename local variable &apos;link2&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;bTree{BTree.java[BTree[Node~split@link2!1810!1858!1817!1821!\[QNode;!0!false" name="linksRight" references="true" stamp="1354472271623" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;key&apos; in &apos;bTree.BTree.predictLeafWhereToPut(...)&apos; to &apos;k&apos;&#x0D;&#x0A;- Original project: &apos;BTree&apos;&#x0D;&#x0A;- Original element: &apos;bTree.BTree.predictLeafWhereToPut(Key).key&apos;&#x0D;&#x0A;- Renamed element: &apos;key&apos;&#x0D;&#x0A;- Update references to refactored element" description="Rename local variable &apos;key&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;bTree{BTree.java[BTree~predictLeafWhereToPut~QKey;@key!22471!22477!22475!22477!QKey;!0!true" name="k" references="true" stamp="1354475405913" version="1.0"/>&#x0A;<refactoring comment="Move element &apos;&apos; to &apos;bTree.BTree.Node.set(...)&apos;&#x0D;&#x0A;- Original project: &apos;BTree&apos;&#x0D;&#x0A;- Destination element: &apos;bTree.BTree.Node.set(...)&apos;&#x0D;&#x0A;- Original element: &apos;bTree.BTree.Node.merge(...)&apos;&#x0D;&#x0A;- Textual move only&#x0D;&#x0A;- Update references to refactored element" description="Move method" destination="/src&lt;bTree{BTree.java[BTree[Node~set~I~QKey;~QValue;" element1="/src&lt;bTree{BTree.java[BTree[Node~merge~QNode;~QNode;~I" flags="589830" id="org.eclipse.jdt.ui.move" members="1" policy="org.eclipse.jdt.ui.moveMembers" stamp="1354475483895" version="1.0"/>&#x0A;<refactoring comment="Move 2 elements to &apos;bTree.BTree.Node.set(...)&apos;&#x0D;&#x0A;- Original project: &apos;BTree&apos;&#x0D;&#x0A;- Destination element: &apos;bTree.BTree.Node.set(...)&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     bTree.BTree.Node.flowFromLeft(...)&#x0D;&#x0A;     bTree.BTree.Node.flowFromRight(...)&#x0D;&#x0A;- Textual move only&#x0D;&#x0A;- Update references to refactored element" description="Move methods" destination="/src&lt;bTree{BTree.java[BTree[Node~set~I~QKey;~QValue;" element1="/src&lt;bTree{BTree.java[BTree[Node~flowFromLeft~I" element2="/src&lt;bTree{BTree.java[BTree[Node~flowFromRight~I" flags="589830" id="org.eclipse.jdt.ui.move" members="2" policy="org.eclipse.jdt.ui.moveMembers" stamp="1354475495454" version="1.0"/>&#x0A;<refactoring comment="Move element &apos;&apos; to &apos;bTree.BTree.Node.toString()&apos;&#x0D;&#x0A;- Original project: &apos;BTree&apos;&#x0D;&#x0A;- Destination element: &apos;bTree.BTree.Node.toString()&apos;&#x0D;&#x0A;- Original element: &apos;bTree.BTree.Node.isLeaf()&apos;&#x0D;&#x0A;- Textual move only&#x0D;&#x0A;- Update references to refactored element" description="Move method" destination="/src&lt;bTree{BTree.java[BTree[Node~toString" element1="/src&lt;bTree{BTree.java[BTree[Node~isLeaf" flags="589830" id="org.eclipse.jdt.ui.move" members="1" policy="org.eclipse.jdt.ui.moveMembers" stamp="1354475515450" version="1.0"/>&#x0A;<refactoring comment="Move 3 elements to &apos;bTree.BTree.Node.whoLinksMeFromParent()&apos;&#x0D;&#x0A;- Original project: &apos;BTree&apos;&#x0D;&#x0A;- Destination element: &apos;bTree.BTree.Node.whoLinksMeFromParent()&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     bTree.BTree.Node.AlessOrEqThanB(...)&#x0D;&#x0A;     bTree.BTree.Node.AlessThanB(...)&#x0D;&#x0A;     bTree.BTree.Node.eq(...)&#x0D;&#x0A;- Textual move only&#x0D;&#x0A;- Update references to refactored element" description="Move methods" destination="/src&lt;bTree{BTree.java[BTree[Node~whoLinksMeFromParent" element1="/src&lt;bTree{BTree.java[BTree[Node~AlessOrEqThanB~QKey;~QKey;" element2="/src&lt;bTree{BTree.java[BTree[Node~AlessThanB~QKey;~QKey;" element3="/src&lt;bTree{BTree.java[BTree[Node~eq~QKey;~QKey;" flags="589830" id="org.eclipse.jdt.ui.move" members="3" policy="org.eclipse.jdt.ui.moveMembers" stamp="1354475528789" version="1.0"/>&#x0A;<refactoring comment="Rename field &apos;maxThreshold&apos; in &apos;bTree.BTree.Node&apos; to &apos;callermaxThreshold&apos;&#x0D;&#x0A;- Original project: &apos;BTree&apos;&#x0D;&#x0A;- Original element: &apos;bTree.BTree.Node.maxThreshold&apos;&#x0D;&#x0A;- Renamed element: &apos;bTree.BTree.Node.callermaxThreshold&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" delegate="false" deprecate="false" description="Rename field &apos;maxThreshold&apos;" flags="589826" getter="false" id="org.eclipse.jdt.ui.rename.field" input="/src&lt;bTree{BTree.java[BTree[Node^maxThreshold" name="callermaxThreshold" references="true" setter="false" stamp="1354477820169" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename field &apos;minThreshold&apos; in &apos;bTree.BTree.Node&apos; to &apos;callerminThreshold&apos;&#x0D;&#x0A;- Original project: &apos;BTree&apos;&#x0D;&#x0A;- Original element: &apos;bTree.BTree.Node.minThreshold&apos;&#x0D;&#x0A;- Renamed element: &apos;bTree.BTree.Node.callerminThreshold&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" delegate="false" deprecate="false" description="Rename field &apos;minThreshold&apos;" flags="589826" getter="false" id="org.eclipse.jdt.ui.rename.field" input="/src&lt;bTree{BTree.java[BTree[Node^minThreshold" name="callerminThreshold" references="true" setter="false" stamp="1354477824380" textual="false" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private void updateLinking()&apos; from &apos;bTree.BTree.Node.remove()&apos; to &apos;bTree.BTree.Node&apos;&#x0D;&#x0A;- Original project: &apos;BTree&apos;&#x0D;&#x0A;- Method name: &apos;updateLinking&apos;&#x0D;&#x0A;- Destination type: &apos;bTree.BTree.Node&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;updateLinking&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;bTree{BTree.java" name="updateLinking" replace="false" selection="8583 356" stamp="1354479502961" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Copy element &apos;&apos; to &apos;bTree.BTree.Node.AlessOrEqThanB(...)&apos;&#x0D;&#x0A;- Original project: &apos;BTree&apos;&#x0D;&#x0A;- Destination element: &apos;bTree.BTree.Node.AlessOrEqThanB(...)&apos;&#x0D;&#x0A;- Original element: &apos;bTree.BTree.Node.AlessThanB(...)&apos;" description="Copy method" destination="/src&lt;bTree{BTree.java[BTree[Node~AlessOrEqThanB~QKey;~QKey;" element1="/src&lt;bTree{BTree.java[BTree[Node~AlessThanB~QKey;~QKey;" flags="589830" id="org.eclipse.jdt.ui.copy" members="1" policy="org.eclipse.jdt.ui.copyMembers" stamp="1354480473279" version="1.0"/>
</session>